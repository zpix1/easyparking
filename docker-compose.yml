version: "3.7"

services:
  mongodb:
    image: mongo:5.0.2
    restart: unless-stopped
    ports:
      - 27017:27017
    networks:
      - easyparking-network
    # TODO
    # volumes:

  backend:
    depends_on:
      - mongodb
    build: ./easyparking-backend
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - easyparking-network

  frontend:
    build: ./easyparking-frontend
    ports:
      - 5173:5173
    networks:
    - easyparking-network
    
  nginx:
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - backend
      - frontend
      - pooler
    restart: always
    networks:
    - easyparking-network

  minio:
    image: 'bitnami/minio:latest'
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=uQqbdgRyi3oxPS1m
      - MINIO_ROOT_PASSWORD=0dKIYnyLtnMIa9h8uJsYLkpgM9qJPI6V
      - MINIO_DEFAULT_BUCKETS=images,processedimages
    restart: always
    networks:
      - easyparking-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    networks:
        - easyparking-network

  image-processor:
    build: ./easyparking-ml
    depends_on:
      - minio
      - rabbitmq
    restart: always
    networks:
      - easyparking-network
    environment:
      - RABBITMQ_URL=rabbitmq
      - RABBITMQ_PORT=5672
      - MINIO_URL=minio
      - MINIO_PORT=9000
      - MINIO_SERVER_ACCESS_KEY=uQqbdgRyi3oxPS1m
      - MINIO_SERVER_SECRET_KEY=0dKIYnyLtnMIa9h8uJsYLkpgM9qJPI6V

  pooler:
    build:
      context: ./easyparking-pooler
      dockerfile: Dockerfile.dev
    networks:
    - easyparking-network
    ports:
      - 4000:4000

networks:
  easyparking-network:
    driver: bridge

# TODO
# volumes:
#   db:
